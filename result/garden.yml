kind: Module
description: Results UI service
type: container
name: result
services:
  - name: result
    args: [nodemon, server.js]
    devMode:
      sync:
        - target: /app
    dependencies:
      - db-init
    ingresses:
      - path: /
        port: http
        hostname: result.${var.baseHostname}
    ports:
      - name: http
        protocol: TCP
        containerPort: 8080
        servicePort: 80
    env:
      PGDATABASE: ${var.postgres-database}
      PGUSER: ${var.postgres-username}
      PGPASSWORD: ${var.postgres-password}
      ROOKOUT_TOKEN: ${var.rookoutToken}
tests:
  - name: integ
    args: [npm, run, test:integ]
    timeout: 30
    dependencies:
      - result
      - api
      - vote
      - worker
    env:
      PGDATABASE: ${var.postgres-database}
      PGUSER: ${var.postgres-username}
      PGPASSWORD: ${var.postgres-password}
